import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the minimumNumber function below.
    static int minimumNumber(int n, String password) {
        // Return the minimum number of characters to make the password strong
        int lc=0;
        int uc=0;
        int num=0;
        int sc=0;
        int sum=0;
        
        String lowerCase=".*[a-z]+.*";
        String upperCase=".*[A-Z]+.*";
        String numbers=".*[0-9]+.*";
        String specialChars=".*[-!@#$%^&*()+]+.*";
        
        if(!(password.matches(lowerCase)))
           lc++;
           
        if(!(password.matches(upperCase)))
          uc++;
          
        if(!(password.matches(numbers)))
           num++;   
        
        if(!(password.matches(specialChars))) 
           sc++;
           
           
         sum=lc+uc+num+sc;
         
         return (sum>(6-n))?sum:(6-n);     

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String password = scanner.nextLine();

        int answer = minimumNumber(n, password);

        bufferedWriter.write(String.valueOf(answer));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}

